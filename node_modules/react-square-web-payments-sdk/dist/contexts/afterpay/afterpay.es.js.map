{"version":3,"file":"afterpay.es.js","sources":["../../../src/contexts/afterpay/afterpay.tsx"],"sourcesContent":["// Dependencies\nimport * as React from 'react';\nimport type * as Square from '@square/web-sdk';\n\n// Internals\nimport { useForm } from '../form';\nimport type { AfterpayProviderProps } from './afterpay.types';\n\nexport const AfterpayContext = React.createContext<Square.AfterpayClearpay | null | undefined>(null);\n\nfunction AfterpayProvider({ children, onShippingAddressChange, onShippingOptionChange }: AfterpayProviderProps) {\n  const [afterpay, setAfterpay] = React.useState<Square.AfterpayClearpay | null>(null);\n  const { createPaymentRequest, payments } = useForm();\n\n  if (!createPaymentRequest) {\n    throw new Error('`createPaymentRequest()` is required when using digital wallets');\n  }\n\n  React.useEffect(() => {\n    const abortController = new AbortController();\n    const { signal } = abortController;\n\n    const start = async (signal: AbortSignal) => {\n      const paymentRequest = payments?.paymentRequest(createPaymentRequest);\n\n      if (!paymentRequest) {\n        throw new Error('`paymentRequest` is required when using digital wallets');\n      }\n\n      if (onShippingAddressChange) {\n        paymentRequest.addEventListener('afterpay_shippingaddresschanged', onShippingAddressChange);\n      }\n      if (onShippingOptionChange) {\n        paymentRequest.addEventListener('afterpay_shippingoptionchanged', onShippingOptionChange);\n      }\n\n      const afterpay = await payments?.afterpayClearpay(paymentRequest).then((res) => {\n        if (!signal.aborted) {\n          setAfterpay(res);\n\n          return res;\n        }\n\n        return null;\n      });\n\n      if (signal.aborted) {\n        await afterpay?.destroy();\n      }\n    };\n\n    start(signal);\n\n    return () => {\n      abortController.abort();\n    };\n  }, [createPaymentRequest, payments]);\n\n  return <AfterpayContext.Provider value={afterpay}>{children}</AfterpayContext.Provider>;\n}\n\nexport function useAfterpay() {\n  const context = React.useContext(AfterpayContext);\n\n  if (context === undefined) {\n    throw new Error('`useAfterpay()` must be used within an `<AfterpayProvider>`');\n  }\n\n  return context;\n}\n\nexport default AfterpayProvider;\n"],"names":[],"mappings":";;;AAQa,MAAA,eAAA,GAAkB,KAAM,CAAA,aAAA,CAA0D,IAAI,EAAA;AAEnG,SAA0B,gBAAA,CAAA,EAAE,QAAU,EAAA,uBAAA,EAAyB,sBAAiD,EAAA,EAAA;AAC9G,EAAA,MAAM,CAAC,QAAA,EAAU,WAAe,CAAA,GAAA,KAAA,CAAM,SAAyC,IAAI,CAAA,CAAA;AACnF,EAAM,MAAA,EAAE,oBAAsB,EAAA,QAAA,EAAA,GAAa,OAAQ,EAAA,CAAA;AAEnD,EAAA,IAAI,CAAC,oBAAsB,EAAA;AACzB,IAAM,MAAA,IAAI,MAAM,iEAAiE,CAAA,CAAA;AAAA,GACnF;AAEA,EAAA,KAAA,CAAM,UAAU,MAAM;AACpB,IAAM,MAAA,eAAA,GAAkB,IAAI,eAAgB,EAAA,CAAA;AAC5C,IAAA,MAAM,EAAE,MAAW,EAAA,GAAA,eAAA,CAAA;AAEnB,IAAM,MAAA,KAAA,GAAQ,OAAO,OAAwB,KAAA;AAC3C,MAAM,MAAA,cAAA,GAAiB,QAAU,EAAA,cAAA,CAAe,oBAAoB,CAAA,CAAA;AAEpE,MAAA,IAAI,CAAC,cAAgB,EAAA;AACnB,QAAM,MAAA,IAAI,MAAM,yDAAyD,CAAA,CAAA;AAAA,OAC3E;AAEA,MAAA,IAAI,uBAAyB,EAAA;AAC3B,QAAe,cAAA,CAAA,gBAAA,CAAiB,mCAAmC,uBAAuB,CAAA,CAAA;AAAA,OAC5F;AACA,MAAA,IAAI,sBAAwB,EAAA;AAC1B,QAAe,cAAA,CAAA,gBAAA,CAAiB,kCAAkC,sBAAsB,CAAA,CAAA;AAAA,OAC1F;AAEA,MAAM,MAAA,SAAA,GAAW,MAAM,QAAU,EAAA,gBAAA,CAAiB,cAAc,CAAE,CAAA,IAAA,CAAK,CAAC,GAAQ,KAAA;AAC9E,QAAI,IAAA,CAAC,QAAO,OAAS,EAAA;AACnB,UAAA,WAAA,CAAY,GAAG,CAAA,CAAA;AAEf,UAAO,OAAA,GAAA,CAAA;AAAA,SACT;AAEA,QAAO,OAAA,IAAA,CAAA;AAAA,OACR,CAAA,CAAA;AAED,MAAA,IAAI,QAAO,OAAS,EAAA;AAClB,QAAA,MAAM,WAAU,OAAQ,EAAA,CAAA;AAAA,OAC1B;AAAA,KACF,CAAA;AAEA,IAAA,KAAA,CAAM,MAAM,CAAA,CAAA;AAEZ,IAAA,OAAO,MAAM;AACX,MAAA,eAAA,CAAgB,KAAM,EAAA,CAAA;AAAA,KACxB,CAAA;AAAA,GACC,EAAA,CAAC,oBAAsB,EAAA,QAAQ,CAAC,CAAA,CAAA;AAEnC,EAAO,uBAAA,KAAA,CAAA,aAAA,CAAC,gBAAgB,QAAhB,EAAA;AAAA,IAAyB,KAAO,EAAA,QAAA;AAAA,GAAA,EAAW,QAAS,CAAA,CAAA;AAC9D,CAAA;AAE8B,SAAA,WAAA,GAAA;AAC5B,EAAM,MAAA,OAAA,GAAU,KAAM,CAAA,UAAA,CAAW,eAAe,CAAA,CAAA;AAEhD,EAAA,IAAI,YAAY,KAAW,CAAA,EAAA;AACzB,IAAM,MAAA,IAAI,MAAM,6DAA6D,CAAA,CAAA;AAAA,GAC/E;AAEA,EAAO,OAAA,OAAA,CAAA;AACT;;;;"}
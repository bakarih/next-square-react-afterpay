"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});var m=require("react"),b=require("../form/form.cjs.js");function v(e){if(e&&e.__esModule)return e;var r=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});return e&&Object.keys(e).forEach(function(t){if(t!=="default"){var n=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(r,t,n.get?n:{enumerable:!0,get:function(){return e[t]}})}}),r.default=e,Object.freeze(r)}var a=v(m);const i=a.createContext(null);function w({children:e,onShippingAddressChange:r,onShippingOptionChange:t}){const[n,y]=a.useState(null),{createPaymentRequest:u,payments:s}=b.useForm();if(!u)throw new Error("`createPaymentRequest()` is required when using digital wallets");return a.useEffect(()=>{const f=new AbortController,{signal:d}=f;return(async c=>{const o=s?.paymentRequest(u);if(!o)throw new Error("`paymentRequest` is required when using digital wallets");r&&o.addEventListener("afterpay_shippingaddresschanged",r),t&&o.addEventListener("afterpay_shippingoptionchanged",t);const p=await s?.afterpayClearpay(o).then(l=>c.aborted?null:(y(l),l));c.aborted&&await p?.destroy()})(d),()=>{f.abort()}},[u,s]),a.createElement(i.Provider,{value:n},e)}function g(){const e=a.useContext(i);if(e===void 0)throw new Error("`useAfterpay()` must be used within an `<AfterpayProvider>`");return e}exports.AfterpayContext=i;exports.default=w;exports.useAfterpay=g;
//# sourceMappingURL=afterpay.cjs.js.map

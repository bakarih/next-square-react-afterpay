{"version":3,"file":"afterpay.cjs.js","sources":["../../../src/contexts/afterpay/afterpay.tsx"],"sourcesContent":["// Dependencies\nimport * as React from 'react';\nimport type * as Square from '@square/web-sdk';\n\n// Internals\nimport { useForm } from '../form';\nimport type { AfterpayProviderProps } from './afterpay.types';\n\nexport const AfterpayContext = React.createContext<Square.AfterpayClearpay | null | undefined>(null);\n\nfunction AfterpayProvider({ children, onShippingAddressChange, onShippingOptionChange }: AfterpayProviderProps) {\n  const [afterpay, setAfterpay] = React.useState<Square.AfterpayClearpay | null>(null);\n  const { createPaymentRequest, payments } = useForm();\n\n  if (!createPaymentRequest) {\n    throw new Error('`createPaymentRequest()` is required when using digital wallets');\n  }\n\n  React.useEffect(() => {\n    const abortController = new AbortController();\n    const { signal } = abortController;\n\n    const start = async (signal: AbortSignal) => {\n      const paymentRequest = payments?.paymentRequest(createPaymentRequest);\n\n      if (!paymentRequest) {\n        throw new Error('`paymentRequest` is required when using digital wallets');\n      }\n\n      if (onShippingAddressChange) {\n        paymentRequest.addEventListener('afterpay_shippingaddresschanged', onShippingAddressChange);\n      }\n      if (onShippingOptionChange) {\n        paymentRequest.addEventListener('afterpay_shippingoptionchanged', onShippingOptionChange);\n      }\n\n      const afterpay = await payments?.afterpayClearpay(paymentRequest).then((res) => {\n        if (!signal.aborted) {\n          setAfterpay(res);\n\n          return res;\n        }\n\n        return null;\n      });\n\n      if (signal.aborted) {\n        await afterpay?.destroy();\n      }\n    };\n\n    start(signal);\n\n    return () => {\n      abortController.abort();\n    };\n  }, [createPaymentRequest, payments]);\n\n  return <AfterpayContext.Provider value={afterpay}>{children}</AfterpayContext.Provider>;\n}\n\nexport function useAfterpay() {\n  const context = React.useContext(AfterpayContext);\n\n  if (context === undefined) {\n    throw new Error('`useAfterpay()` must be used within an `<AfterpayProvider>`');\n  }\n\n  return context;\n}\n\nexport default AfterpayProvider;\n"],"names":["React","useForm"],"mappings":"ofAQa,KAAA,GAAkBA,EAAM,cAA0D,IAAI,EAEnG,WAA0B,CAAE,WAAU,0BAAyB,0BAAiD,CAC9G,KAAM,CAAC,EAAU,GAAeA,EAAM,SAAyC,IAAI,EAC7E,CAAE,uBAAsB,YAAaC,EAAQ,QAAA,EAEnD,GAAI,CAAC,EACG,KAAA,IAAI,OAAM,iEAAiE,EAGnFD,SAAM,UAAU,IAAM,CACd,KAAA,GAAkB,GAAI,iBACtB,CAAE,UAAW,EA+BnB,MA7Bc,MAAO,IAAwB,CACrC,KAAA,GAAiB,GAAU,eAAe,CAAoB,EAEpE,GAAI,CAAC,EACG,KAAA,IAAI,OAAM,yDAAyD,EAG3E,AAAI,GACa,EAAA,iBAAiB,kCAAmC,CAAuB,EAExF,GACa,EAAA,iBAAiB,iCAAkC,CAAsB,EAGpF,KAAA,GAAW,KAAM,IAAU,iBAAiB,CAAc,EAAE,KAAK,AAAC,GACjE,EAAO,QAML,KALL,GAAY,CAAG,EAER,EAIV,EAED,AAAI,EAAO,SACT,KAAM,IAAU,SAClB,GAGI,CAAM,EAEL,IAAM,CACX,EAAgB,MAAM,CAAA,CACxB,EACC,CAAC,EAAsB,CAAQ,CAAC,EAE5BA,EAAA,cAAC,EAAgB,SAAhB,CAAyB,MAAO,CAAA,EAAW,CAAS,CAC9D,CAE8B,YAAA,CACtB,KAAA,GAAUA,EAAM,WAAW,CAAe,EAEhD,GAAI,IAAY,OACR,KAAA,IAAI,OAAM,6DAA6D,EAGxE,MAAA,EACT"}
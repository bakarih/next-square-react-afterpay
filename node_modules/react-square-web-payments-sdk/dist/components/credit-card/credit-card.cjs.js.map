{"version":3,"file":"credit-card.cjs.js","sources":["../../../src/components/credit-card/credit-card.tsx"],"sourcesContent":["// Dependencies\nimport * as React from 'react';\nimport type * as Square from '@square/web-sdk';\n\n// Internals\nimport { useForm } from '~/contexts/form';\nimport { useEventListener } from '~/hooks/use-event-listener';\nimport { LoadingCard, PayButton } from './credit-card.styles';\nimport type {\n  CreditCardBase,\n  CreditCardChildren,\n  CreditCardFunctionChildren,\n  CreditCardPayButtonProps,\n  CreditCardProps,\n} from './credit-card.types';\n\n/**\n * Renders a Credit Card Input to use in the Square Web Payment SDK, pre-styled\n * to meet Square branding guidelines.\n *\n * **_But with the option to override styles_**\n *\n * @example\n *\n * ```tsx\n * function App() {\n *   return (\n *     <SquareForm {...props}>\n *       <CreditCard />\n *     </SquareForm>\n *   );\n * }\n * ```\n */\nfunction CreditCard(props: CreditCardBase): JSX.Element;\nfunction CreditCard(props: CreditCardChildren): JSX.Element;\nfunction CreditCard(props: CreditCardFunctionChildren): JSX.Element;\nfunction CreditCard({\n  buttonProps,\n  callbacks,\n  children,\n  focus = 'cardNumber',\n  id = 'rswps-card-container',\n  includeInputLabels,\n  postalCode,\n  recalculateSize,\n  render,\n  style,\n  ...props\n}: CreditCardProps) {\n  const [card, setCard] = React.useState<Square.Card | undefined>(() => undefined);\n  const [isSubmitting, setIsSubmitting] = React.useState<boolean>(false);\n  const buttonRef = React.useRef<HTMLButtonElement>(null);\n  const { cardTokenizeResponseReceived, payments } = useForm();\n\n  const options: Square.CardOptions = React.useMemo(() => {\n    const baseOptions = {\n      includeInputLabels,\n      postalCode,\n      style,\n    };\n\n    // if a value from options is undefined delete it from the options object\n    return Object.keys(baseOptions).reduce((acc: Record<string, unknown>, key) => {\n      if (baseOptions[key as keyof typeof baseOptions] !== undefined) {\n        acc[key as string] = baseOptions[key as keyof typeof baseOptions];\n      }\n\n      return acc;\n    }, {});\n  }, [includeInputLabels, postalCode, style]);\n\n  /**\n   * Handle the on click of the Credit Card button click\n   *\n   * @param e An event which takes place in the DOM.\n   * @returns The data be sended to `cardTokenizeResponseReceived()` function, or an error\n   */\n  const handlePayment = async (e: Event) => {\n    e.stopPropagation();\n\n    if (buttonProps?.isLoading) return;\n\n    if (!card) {\n      console.warn('Credit Card button was clicked, but no Credit Card instance was found.');\n\n      return;\n    }\n\n    setIsSubmitting(true);\n\n    try {\n      const result = await card.tokenize();\n\n      if (result.status === 'OK') {\n        const tokenizedResult = await cardTokenizeResponseReceived(result);\n        return tokenizedResult;\n      }\n\n      let message = `Tokenization failed with status: ${result.status}`;\n      if (result?.errors) {\n        message += ` and errors: ${JSON.stringify(result?.errors)}`;\n\n        throw new Error(message);\n      }\n\n      console.warn(message);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  React.useEffect(() => {\n    const abortController = new AbortController();\n    const { signal } = abortController;\n\n    const start = async (signal: AbortSignal) => {\n      const card = await payments?.card(options).then((res) => {\n        if (!signal.aborted) {\n          setCard(res);\n          return res;\n        }\n\n        return null;\n      });\n\n      await card?.attach(`#${id}`);\n      if (focus) {\n        await card?.focus(focus);\n      }\n\n      if (signal.aborted) {\n        await card?.destroy();\n      }\n    };\n\n    start(signal);\n\n    return () => {\n      abortController.abort();\n    };\n  }, [payments, id]);\n\n  React.useEffect(() => {\n    if (card && focus) {\n      card.focus(focus);\n    }\n  }, [card, focus]);\n\n  if (callbacks) {\n    for (const callback of Object.keys(callbacks)) {\n      card?.addEventListener(\n        callback as Square.CardInputEventTypes,\n        (callbacks as Record<string, (event: Square.SqEvent<Square.CardInputEvent>) => void>)[callback]\n      );\n    }\n  }\n\n  if (recalculateSize) {\n    recalculateSize(card?.recalculateSize);\n  }\n\n  useEventListener({\n    listener: handlePayment,\n    type: 'click',\n    element: buttonRef,\n    options: {\n      passive: true,\n    },\n  });\n\n  const Button = ({ children, isLoading, ...props }: CreditCardPayButtonProps) => {\n    const id = 'rswp-card-button';\n    const disabled = isLoading || !card || isSubmitting;\n\n    return (\n      <PayButton\n        {...props}\n        aria-disabled={disabled}\n        css={props?.css}\n        disabled={disabled}\n        id={id}\n        ref={buttonRef}\n        type=\"button\"\n      >\n        {children ?? 'Pay'}\n      </PayButton>\n    );\n  };\n\n  return (\n    <>\n      <div {...props} data-testid=\"rswps-card-container\" id={id} style={{ minHeight: 89 }}>\n        {!card && <LoadingCard />}\n      </div>\n\n      {typeof render === 'function' ? render(Button) : <Button {...buttonProps}>{children ?? 'Pay'}</Button>}\n    </>\n  );\n}\n\nexport default CreditCard;\nexport * from './credit-card.types';\n"],"names":["React","useForm","useEventListener","PayButton","LoadingCard"],"mappings":"4lBAqCA,WAAoB,CAClB,cACA,YACA,WACA,QAAQ,aACR,KAAK,uBACL,qBACA,aACA,kBACA,SACA,WACG,GACe,CAClB,KAAM,CAAC,EAAM,GAAWA,EAAM,SAAkC,IAAA,EAAe,EACzE,CAAC,EAAc,GAAmBA,EAAM,SAAkB,EAAK,EAC/D,EAAYA,EAAM,OAA0B,IAAI,EAChD,CAAE,+BAA8B,YAAaC,EAAQ,QAAA,EAErD,EAA8BD,EAAM,QAAQ,IAAM,CACtD,KAAM,GAAc,CAClB,qBACA,aACA,OAAA,EAIF,MAAO,QAAO,KAAK,CAAW,EAAE,OAAO,CAAC,EAA8B,IAChE,GAAY,KAAqC,QACnD,GAAI,GAAiB,EAAY,IAG5B,GACN,CAAE,CAAA,CACJ,EAAA,CAAC,EAAoB,EAAY,CAAK,CAAC,EAQpC,EAAgB,KAAO,IAAa,CAGxC,GAFA,EAAE,gBAAgB,EAEd,IAAa,UAEjB,IAAI,CAAC,EAAM,CACT,QAAQ,KAAK,wEAAwE,EAErF,MACF,CAEA,EAAgB,EAAI,EAEhB,GAAA,CACI,KAAA,GAAS,KAAM,GAAK,WAEtB,GAAA,EAAO,SAAW,KAEb,MADiB,MAAM,GAA6B,CAAM,EAI/D,GAAA,GAAU,oCAAoC,EAAO,SACzD,GAAI,GAAQ,OACV,SAAW,gBAAgB,KAAK,UAAU,GAAQ,MAAM,IAElD,GAAI,OAAM,CAAO,EAGzB,QAAQ,KAAK,CAAO,QACb,GACP,QAAQ,MAAM,CAAK,CAAA,QACnB,CACA,EAAgB,EAAK,CACvB,EAAA,EAwCF,GArCAA,EAAM,UAAU,IAAM,CACd,KAAA,GAAkB,GAAI,iBACtB,CAAE,UAAW,EAsBnB,MApBc,MAAO,IAAwB,CACrC,KAAA,GAAO,KAAM,IAAU,KAAK,CAAO,EAAE,KAAK,AAAC,GAC1C,EAAO,QAKL,KAJL,GAAQ,CAAG,EACJ,EAIV,EAEK,KAAA,IAAM,OAAO,IAAI,GAAI,EACvB,GACI,KAAA,IAAM,MAAM,CAAK,EAGrB,EAAO,SACT,KAAM,IAAM,SACd,GAGI,CAAM,EAEL,IAAM,CACX,EAAgB,MAAM,CAAA,CACxB,EACC,CAAC,EAAU,CAAE,CAAC,EAEjBA,EAAM,UAAU,IAAM,CACpB,AAAI,GAAQ,GACV,EAAK,MAAM,CAAK,CAClB,EACC,CAAC,EAAM,CAAK,CAAC,EAEZ,EACF,SAAW,KAAY,QAAO,KAAK,CAAS,EACpC,GAAA,iBACJ,EACC,EAAqF,EACxF,EAIJ,AAAI,GACF,EAAgB,GAAM,eAAe,EAGtBE,mBAAA,CACf,SAAU,EACV,KAAM,QACN,QAAS,EACT,QAAS,CACP,QAAS,EACX,CAAA,CACD,EAED,KAAM,GAAS,CAAC,CAAE,SAAA,EAAU,eAAc,KAAsC,CAC9E,KAAM,GAAK,mBACL,EAAW,GAAa,CAAC,GAAQ,EAEvC,MACGF,GAAA,cAAAG,YAAA,CACE,GAAG,EACJ,gBAAe,EACf,IAAK,GAAO,IACZ,WACA,GAAI,EACJ,IAAK,EACL,KAAK,QAAA,EAEJ,GAAY,KACf,CAAA,EAIJ,uCAEKH,EAAA,cAAA,MAAA,CAAK,GAAG,EAAO,cAAY,uBAAuB,KAAQ,MAAO,CAAE,UAAW,EAAG,CAAA,EAC/E,CAAC,GAASA,EAAA,cAAAI,EAAA,YAAA,IAAY,CACzB,EAEC,MAAO,IAAW,WAAa,EAAO,CAAM,EAAKJ,EAAA,cAAA,EAAA,CAAQ,GAAG,CAAA,EAAc,GAAY,KAAM,CAC/F,CAEJ"}
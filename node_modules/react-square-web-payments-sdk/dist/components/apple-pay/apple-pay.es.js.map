{"version":3,"file":"apple-pay.es.js","sources":["../../../src/components/apple-pay/apple-pay.tsx"],"sourcesContent":["// Dependencies\nimport * as React from 'react';\nimport type * as Square from '@square/web-sdk';\n\n// Internals\nimport { useForm } from '~/contexts/form';\nimport { useEventListener } from '~/hooks/use-event-listener';\nimport { ApplePayContainer } from './apple-pay.styles';\nimport type { ApplePayProps } from './apple-pay.types';\n\n/**\n * Renders a Apple Pay button to use in the Square Web Payment SDK, pre-styled\n * to meet Apple Pay's branding guidelines.\n *\n * **Remember** that you need to set `createPaymentRequest()` in `SquareForm` if\n * you going to use this Payment Method\n *\n * @example\n *\n * ```tsx\n * function App() {\n *   return (\n *     <SquareForm {...props}>\n *       <ApplePay />\n *     </SquareForm>\n *   );\n * }\n * ```\n */\nfunction ApplePay({ id = 'rswps-apple-pay', ...props }: ApplePayProps) {\n  const [applePay, setApplePay] = React.useState<Square.ApplePay | undefined>(() => undefined);\n  const { cardTokenizeResponseReceived, createPaymentRequest, payments } = useForm();\n  const containerRef = React.useRef<HTMLDivElement>(null);\n\n  /**\n   * Handle the on click of the Apple Pay button click\n   *\n   * @param e An event which takes place in the DOM.\n   * @returns The data be sended to `cardTokenizeResponseReceived()` function, or an error\n   */\n  const handlePayment = async (e: Event) => {\n    e.stopPropagation();\n\n    if (!applePay) {\n      console.warn('Apple Pay button was clicked, but no Apple Pay instance was found.');\n\n      return;\n    }\n\n    try {\n      const result = await applePay.tokenize();\n\n      if (result.status === 'OK') {\n        return cardTokenizeResponseReceived(result);\n      }\n\n      let message = `Tokenization failed with status: ${result.status}`;\n      if (result?.errors) {\n        message += ` and errors: ${JSON.stringify(result?.errors)}`;\n\n        throw new Error(message);\n      }\n\n      console.warn(message);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  React.useEffect(() => {\n    if (!createPaymentRequest) {\n      throw new Error('`createPaymentRequest()` is required when using digital wallets');\n    }\n\n    const abortController = new AbortController();\n    const { signal } = abortController;\n\n    const start = async (signal: AbortSignal) => {\n      const paymentRequest = payments?.paymentRequest(createPaymentRequest);\n\n      if (!paymentRequest) {\n        throw new Error('`paymentRequest` is required when using digital wallets');\n      }\n\n      try {\n        const applePay = await payments?.applePay(paymentRequest).then((res) => {\n          if (signal?.aborted) {\n            return;\n          }\n\n          setApplePay(res);\n\n          return res;\n        });\n\n        if (signal.aborted) {\n          await applePay?.destroy();\n        }\n      } catch (error) {\n        console.error('Initializing Apple Pay failed', error);\n      }\n    };\n\n    start(signal);\n\n    return () => {\n      abortController.abort();\n    };\n  }, [createPaymentRequest, payments]);\n\n  useEventListener({\n    listener: handlePayment,\n    type: 'click',\n    element: containerRef,\n    options: {\n      passive: true,\n    },\n  });\n\n  return (\n    <ApplePayContainer\n      {...props}\n      // We need to make this styles to be able to use event listener\n      css={{\n        display: applePay ? 'block' : 'none',\n        opacity: applePay ? 1 : 0.5,\n        pointerEvents: applePay ? 'auto' : 'none',\n        visibility: applePay ? 'visible' : 'hidden',\n      }}\n      id={id}\n      ref={containerRef}\n    ></ApplePayContainer>\n  );\n}\n\nexport default ApplePay;\nexport * from './apple-pay.types';\n"],"names":[],"mappings":"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"}
{"version":3,"file":"afterpay.cjs.js","sources":["../../../src/components/afterpay/afterpay.tsx"],"sourcesContent":["// Dependencies\nimport * as React from 'react';\nimport type * as Square from '@square/web-sdk';\n\n// Internals\nimport { useAfterpay } from '~/contexts/afterpay';\nimport { useEventListener } from '~/hooks/use-event-listener';\nimport { AfterpayContext, AfterpayProvider } from '~/contexts/afterpay';\nimport { useForm } from '~/contexts/form';\nimport { ButtonLoader } from './afterpay.styles';\nimport type {\n  AfterpayButtonProps,\n  AfterpayMessageBaseProps,\n  AfterpayMessageCustomComponentProps,\n  AfterpayMessageProps,\n  AfterpayWidgetProps,\n} from './afterpay.types';\n\nexport function AfterpayButton({\n  Button,\n  buttonColor = 'black',\n  buttonType = 'buy_now_with_afterpay',\n  finalCtaButtonType = 'buy_now',\n  id = 'rswps-afterpay-button',\n  ...props\n}: AfterpayButtonProps) {\n  const containerRef = React.useRef<HTMLElement>(null);\n  const afterpay = useAfterpay();\n  const { cardTokenizeResponseReceived } = useForm();\n\n  const options: Square.AfterpayButtonOptions = React.useMemo(\n    () => ({\n      buttonColor,\n      buttonType,\n      finalCtaButtonType,\n      useCustomButton: Boolean(Button),\n    }),\n    [Button, buttonColor, buttonType, finalCtaButtonType]\n  );\n\n  /**\n   * Handle the on click of the Afterpay button click\n   *\n   * @param e An event which takes place in the DOM.\n   * @returns The data be sended to `cardTokenizeResponseReceived()` function, or an error\n   */\n  const handlePayment = async (e: Event) => {\n    e.stopPropagation();\n\n    if (!afterpay) {\n      console.warn('Afterpay/Clearpay button was clicked, but no Afterpay/Clearpay instance was found.');\n\n      return;\n    }\n\n    try {\n      const result = await afterpay.tokenize();\n\n      if (result.status === 'OK') {\n        return cardTokenizeResponseReceived(result);\n      }\n\n      let message = `Tokenization failed with status: ${result?.status}`;\n      if (result?.errors) {\n        message += ` and errors: ${JSON.stringify(result?.errors)}`;\n\n        throw new Error(message);\n      }\n\n      console.warn(message);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  React.useEffect(() => {\n    if (afterpay) {\n      afterpay?.attach(`#${id}`, options);\n    }\n\n    return () => {\n      if (afterpay) {\n        afterpay?.destroy();\n      }\n    };\n  }, [afterpay]);\n\n  useEventListener({\n    listener: handlePayment,\n    type: 'click',\n    element: containerRef,\n    options: {\n      passive: true,\n    },\n  });\n\n  if (Button) {\n    return <Button {...props} id={id} ref={containerRef} />;\n  }\n\n  return (\n    <div {...props} id={id} ref={containerRef as React.RefObject<HTMLDivElement>}>\n      {!afterpay ? <ButtonLoader /> : null}\n    </div>\n  );\n}\n\nexport function AfterpayMessage(props: AfterpayMessageBaseProps): JSX.Element;\nexport function AfterpayMessage(props: AfterpayMessageCustomComponentProps): JSX.Element;\nexport function AfterpayMessage({\n  badgeTheme = 'black-on-mint',\n  component,\n  id = 'rswps-afterpay-message',\n  modalLinkStyle = 'circled-info-icon',\n  modalTheme = 'mint',\n  size = 'md',\n  ...props\n}: AfterpayMessageProps) {\n  const messageRef = React.useRef<HTMLDivElement>(null);\n  const afterpay = useAfterpay();\n\n  const options: Square.AfterpayMessagingOptions = React.useMemo(\n    () => ({\n      badgeTheme,\n      modalLinkStyle,\n      modalTheme,\n      size,\n    }),\n    [badgeTheme, modalLinkStyle, modalTheme, size]\n  );\n\n  React.useEffect(() => {\n    const start = async () => {\n      await afterpay?.attachMessaging(`#${id}`, options);\n    };\n\n    if (afterpay && !component?.Message) {\n      start();\n    }\n  }, [afterpay, component?.Message, options]);\n\n  const onClick = async (e: Event) => {\n    e.stopPropagation();\n\n    afterpay?.displayInformationModal({ modalTheme });\n  };\n\n  useEventListener({\n    listener: onClick,\n    type: 'click',\n    element: messageRef,\n    options: {\n      passive: true,\n    },\n  });\n\n  const Message = component?.Message;\n  if (Message) {\n    return <Message {...props} id={id} ref={messageRef} />;\n  }\n\n  return <div {...props} id={id} />;\n}\n\nexport function AfterpayWidget({ includeBranding, id = 'rswps-afterpay-widget', ...props }: AfterpayWidgetProps) {\n  const containerRef = React.useRef<HTMLDivElement>(null);\n  const afterpay = useAfterpay();\n\n  React.useEffect(() => {\n    const start = async () => {\n      await afterpay?.attachCheckoutWidget(`#${id}`, {\n        includeBranding,\n      });\n    };\n\n    if (afterpay) {\n      start();\n    }\n  }, [afterpay, includeBranding]);\n\n  return <div {...props} id={id} ref={containerRef} />;\n}\n\nfunction Afterpay(props: AfterpayButtonProps) {\n  return (\n    <AfterpayProvider>\n      <AfterpayButton {...props} />\n    </AfterpayProvider>\n  );\n}\n\nexport { AfterpayContext, AfterpayProvider };\nexport default Afterpay;\nexport * from './afterpay.types';\n"],"names":["React","afterpay","useAfterpay","useForm","useEventListener","ButtonLoader","AfterpayProvider"],"mappings":"8oBAkB+B,WAAA,CAC7B,SACA,cAAc,QACd,aAAa,wBACb,qBAAqB,UACrB,KAAK,2BACF,GACmB,CAChB,KAAA,GAAeA,EAAM,OAAoB,IAAI,EAC7CC,EAAWC,EAAAA,cACX,CAAE,gCAAiCC,EAAAA,UAEnC,EAAwCH,EAAM,QAClD,IAAO,EACL,cACA,aACA,qBACA,gBAAiB,QAAQ,CAAM,CAAA,GAEjC,CAAC,EAAQ,EAAa,EAAY,CAAkB,CACtD,EAQM,EAAgB,KAAO,IAAa,CAGxC,GAFA,EAAE,gBAAgB,EAEd,CAACC,EAAU,CACb,QAAQ,KAAK,oFAAoF,EAEjG,MACF,CAEI,GAAA,CACI,KAAA,GAAS,KAAMA,GAAS,WAE1B,GAAA,EAAO,SAAW,KACpB,MAAO,GAA6B,CAAM,EAGxC,GAAA,GAAU,oCAAoC,GAAQ,SAC1D,GAAI,GAAQ,OACV,SAAW,gBAAgB,KAAK,UAAU,GAAQ,MAAM,IAElD,GAAI,OAAM,CAAO,EAGzB,QAAQ,KAAK,CAAO,QACb,GACP,QAAQ,MAAM,CAAK,CACrB,CAAA,EAwBF,MArBAD,GAAM,UAAU,IACVC,IACQA,GAAA,OAAO,IAAI,IAAM,CAAO,EAG7B,IAAM,CACX,AAAIA,GACFA,GAAU,QAAQ,CACpB,GAED,CAACA,CAAQ,CAAC,EAEIG,mBAAA,CACf,SAAU,EACV,KAAM,QACN,QAAS,EACT,QAAS,CACP,QAAS,EACX,CAAA,CACD,EAEG,EACMJ,EAAA,cAAA,EAAA,CAAQ,GAAG,EAAO,KAAQ,IAAK,CAAA,CAAc,EAIpDA,EAAA,cAAA,MAAA,CAAK,GAAG,EAAO,KAAQ,IAAK,CAAA,EAC1B,AAACC,EAA8B,KAAlBD,EAAA,cAAAK,EAAAA,aAAA,IAAa,CAC7B,CAEJ,CAIgC,WAAA,CAC9B,aAAa,gBACb,YACA,KAAK,yBACL,iBAAiB,oBACjB,aAAa,OACb,OAAO,QACJ,GACoB,CACjB,KAAA,GAAaL,EAAM,OAAuB,IAAI,EAC9CC,EAAWC,EAAAA,cAEX,EAA2CF,EAAM,QACrD,IAAO,EACL,aACA,iBACA,aACA,MAAA,GAEF,CAAC,EAAY,EAAgB,EAAY,CAAI,CAC/C,EAEAA,EAAM,UAAU,IAAM,CACpB,KAAM,GAAQ,SAAY,CACxB,KAAMC,IAAU,gBAAgB,IAAI,IAAM,CAAO,CAAA,EAG/C,AAAAA,GAAY,CAAC,GAAW,SACpB,KAEP,CAACA,EAAU,GAAW,QAAS,CAAO,CAAC,EAEpC,KAAA,GAAU,KAAO,IAAa,CAClC,EAAE,gBAAgB,EAERA,GAAA,wBAAwB,CAAE,YAAA,CAAY,CAAA,EAGjCG,mBAAA,CACf,SAAU,EACV,KAAM,QACN,QAAS,EACT,QAAS,CACP,QAAS,EACX,CAAA,CACD,EAED,KAAM,GAAU,GAAW,QAC3B,MAAI,GACMJ,EAAA,cAAA,EAAA,CAAS,GAAG,EAAO,KAAQ,IAAK,CAAA,CAAY,EAG9CA,EAAA,cAAA,MAAA,CAAK,GAAG,EAAO,IAAA,CAAQ,CACjC,CAEO,WAAwB,CAAE,kBAAiB,KAAK,2BAA4B,GAA8B,CACzG,KAAA,GAAeA,EAAM,OAAuB,IAAI,EAChDC,EAAWC,EAAAA,cAEjBF,SAAM,UAAU,IAAM,CAOpB,AAAIC,GACI,AAPM,UAAY,CAClB,KAAAA,IAAU,qBAAqB,IAAI,IAAM,CAC7C,iBAAA,CACD,CAAA,IAKH,EACC,CAACA,EAAU,CAAe,CAAC,EAEtBD,EAAA,cAAA,MAAA,CAAK,GAAG,EAAO,KAAQ,IAAK,CAAA,CAAc,CACpD,CAEA,WAAkB,EAA4B,CAE1C,MAAAA,GAAA,cAACM,eACEN,EAAA,cAAA,EAAA,CAAgB,GAAG,CAAO,CAAA,CAC7B,CAEJ"}
{"version":3,"file":"afterpay.es.js","sources":["../../../src/components/afterpay/afterpay.tsx"],"sourcesContent":["// Dependencies\nimport * as React from 'react';\nimport type * as Square from '@square/web-sdk';\n\n// Internals\nimport { useAfterpay } from '~/contexts/afterpay';\nimport { useEventListener } from '~/hooks/use-event-listener';\nimport { AfterpayContext, AfterpayProvider } from '~/contexts/afterpay';\nimport { useForm } from '~/contexts/form';\nimport { ButtonLoader } from './afterpay.styles';\nimport type {\n  AfterpayButtonProps,\n  AfterpayMessageBaseProps,\n  AfterpayMessageCustomComponentProps,\n  AfterpayMessageProps,\n  AfterpayWidgetProps,\n} from './afterpay.types';\n\nexport function AfterpayButton({\n  Button,\n  buttonColor = 'black',\n  buttonType = 'buy_now_with_afterpay',\n  finalCtaButtonType = 'buy_now',\n  id = 'rswps-afterpay-button',\n  ...props\n}: AfterpayButtonProps) {\n  const containerRef = React.useRef<HTMLElement>(null);\n  const afterpay = useAfterpay();\n  const { cardTokenizeResponseReceived } = useForm();\n\n  const options: Square.AfterpayButtonOptions = React.useMemo(\n    () => ({\n      buttonColor,\n      buttonType,\n      finalCtaButtonType,\n      useCustomButton: Boolean(Button),\n    }),\n    [Button, buttonColor, buttonType, finalCtaButtonType]\n  );\n\n  /**\n   * Handle the on click of the Afterpay button click\n   *\n   * @param e An event which takes place in the DOM.\n   * @returns The data be sended to `cardTokenizeResponseReceived()` function, or an error\n   */\n  const handlePayment = async (e: Event) => {\n    e.stopPropagation();\n\n    if (!afterpay) {\n      console.warn('Afterpay/Clearpay button was clicked, but no Afterpay/Clearpay instance was found.');\n\n      return;\n    }\n\n    try {\n      const result = await afterpay.tokenize();\n\n      if (result.status === 'OK') {\n        return cardTokenizeResponseReceived(result);\n      }\n\n      let message = `Tokenization failed with status: ${result?.status}`;\n      if (result?.errors) {\n        message += ` and errors: ${JSON.stringify(result?.errors)}`;\n\n        throw new Error(message);\n      }\n\n      console.warn(message);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  React.useEffect(() => {\n    if (afterpay) {\n      afterpay?.attach(`#${id}`, options);\n    }\n\n    return () => {\n      if (afterpay) {\n        afterpay?.destroy();\n      }\n    };\n  }, [afterpay]);\n\n  useEventListener({\n    listener: handlePayment,\n    type: 'click',\n    element: containerRef,\n    options: {\n      passive: true,\n    },\n  });\n\n  if (Button) {\n    return <Button {...props} id={id} ref={containerRef} />;\n  }\n\n  return (\n    <div {...props} id={id} ref={containerRef as React.RefObject<HTMLDivElement>}>\n      {!afterpay ? <ButtonLoader /> : null}\n    </div>\n  );\n}\n\nexport function AfterpayMessage(props: AfterpayMessageBaseProps): JSX.Element;\nexport function AfterpayMessage(props: AfterpayMessageCustomComponentProps): JSX.Element;\nexport function AfterpayMessage({\n  badgeTheme = 'black-on-mint',\n  component,\n  id = 'rswps-afterpay-message',\n  modalLinkStyle = 'circled-info-icon',\n  modalTheme = 'mint',\n  size = 'md',\n  ...props\n}: AfterpayMessageProps) {\n  const messageRef = React.useRef<HTMLDivElement>(null);\n  const afterpay = useAfterpay();\n\n  const options: Square.AfterpayMessagingOptions = React.useMemo(\n    () => ({\n      badgeTheme,\n      modalLinkStyle,\n      modalTheme,\n      size,\n    }),\n    [badgeTheme, modalLinkStyle, modalTheme, size]\n  );\n\n  React.useEffect(() => {\n    const start = async () => {\n      await afterpay?.attachMessaging(`#${id}`, options);\n    };\n\n    if (afterpay && !component?.Message) {\n      start();\n    }\n  }, [afterpay, component?.Message, options]);\n\n  const onClick = async (e: Event) => {\n    e.stopPropagation();\n\n    afterpay?.displayInformationModal({ modalTheme });\n  };\n\n  useEventListener({\n    listener: onClick,\n    type: 'click',\n    element: messageRef,\n    options: {\n      passive: true,\n    },\n  });\n\n  const Message = component?.Message;\n  if (Message) {\n    return <Message {...props} id={id} ref={messageRef} />;\n  }\n\n  return <div {...props} id={id} />;\n}\n\nexport function AfterpayWidget({ includeBranding, id = 'rswps-afterpay-widget', ...props }: AfterpayWidgetProps) {\n  const containerRef = React.useRef<HTMLDivElement>(null);\n  const afterpay = useAfterpay();\n\n  React.useEffect(() => {\n    const start = async () => {\n      await afterpay?.attachCheckoutWidget(`#${id}`, {\n        includeBranding,\n      });\n    };\n\n    if (afterpay) {\n      start();\n    }\n  }, [afterpay, includeBranding]);\n\n  return <div {...props} id={id} ref={containerRef} />;\n}\n\nfunction Afterpay(props: AfterpayButtonProps) {\n  return (\n    <AfterpayProvider>\n      <AfterpayButton {...props} />\n    </AfterpayProvider>\n  );\n}\n\nexport { AfterpayContext, AfterpayProvider };\nexport default Afterpay;\nexport * from './afterpay.types';\n"],"names":[],"mappings":"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"}